for (i in 1:1){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
count_table <- table(date)
max(count_table)
}
max(count_table)
count_table[count_table == max(count_table)]
max <- row.names(max_only)
max_only <- count_table[count_table == max(count_table)]
max <- row.names(max_only)
max
row.names(max_only)
row.names(max_only)
row.names(max_only)
max_only
as.data.frame(max_only)
as.data.frame(max_only)[1,1]
as.matrix(max_only)[1,1]
as.matrix(max_only)[[1]]
colnames(max_only)
colnames(as.data.frame(max_only))
rownames(as.data.frame(max_only))
factor = "dir"
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
count_table <- table(date)
max_only <- count_table[count_table == max(count_table)]
rownames(as.data.frame(max_only))
}
count_table <- table(date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
count_table <- table(date)
max_only <- count_table[count_table == max(count_table)]
rownames(as.data.frame(max_only))
}
rownames(as.data.frame(max_only))
rownames(as.data.frame(max_only))
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
count_table <- table(date)
max_only <- count_table[count_table == max(count_table)]
rownames(as.data.frame(max_only))
}
rownames(as.data.frame(max_only))
print(rownames(as.data.frame(max_only)))
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
count_table <- table(date)
max_only <- count_table[count_table == max(count_table)]
print(rownames(as.data.frame(max_only)))
}
summarise(date)
summarise(date)
summarise(date)
summarise(date)
date <- filter(clima, date == all_dates[i])
summarise(date)
factor = "dir"
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i])
summarise(date)
summarise(date)
summarise(date)
summarise(date)
print(summarise(date))
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i])
print(summarise(date))
}
print(summarise(date))
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i])
print(summarise(date))
}
date
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
date
}
date
date[[1]]
a <- c("a","a","b")
table(a)
a <- c("a","a","b")
table(a)
a <- c("a","a","b","c")
table(a)
table(a)
which.max(table(a))
which.max(table(a))
which.max(table(a))
rowname(which.max(table(a)))
rownames(which.max(table(a)))
rownames(as.data.frame(which.max(table(a))))
rownames(as.data.frame(which.max(table(date))))
factor = "dir"
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
rownames(as.data.frame(which.max(table(date))))
}
rownames(as.data.frame(which.max(table(date))))
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
rownames(as.data.frame(which.max(table(date))))
}
print(max)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
}
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
}
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
}
# Assign the modes of all
all_factors = c("dir","cond","fog")
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
for (i in 1:length(all_dates)){
date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(date))))
print(max)
}
}
clima_by_date
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
clima
clima_by_date
print(put_in_date)
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
put_in_date <- c()
for (i in 1:length(all_dates)){
factor_for_date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(factor_for_date))))
put_in_date <- c(put_in_date,max)
}
print(put_in_date)
}
clima_by_date$factor <- put_in_date
all_factors <- mutate(all_factors, factor = put_in_date )
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
put_in_date <- c()
for (i in 1:length(all_dates)){
factor_for_date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(factor_for_date))))
put_in_date <- c(put_in_date,max)
}
all_factors <- mutate(all_factors, factor = put_in_date )
}
all_factors <- mutate(all_factors, factor = as.data.frame(put_in_date) )
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
put_in_date <- c()
for (i in 1:length(all_dates)){
factor_for_date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(factor_for_date))))
put_in_date <- c(put_in_date,max)
}
all_factors <- mutate(all_factors, factor = as.data.frame(put_in_date) )
}
print(put_in_date)
clima_by_date
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
### Finding mode and mean for each date ###
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
# set the correct datatypes
energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", "", reading)))
View(clima_mean_mode)
View(clima_mean_mode)
xtable(clima_mean_mode)
library(xtable)
xtable(clima_mean_mode)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
library(xtable)
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
### Finding mode and mean for each date ###
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
# set the correct datatypes
#energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", "", reading)))
View(energy)
View(energy)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
library(xtable)
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
### Finding mode and mean for each date ###
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
View(energy)
View(energy)
View(energy)
View(energy)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
library(xtable)
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
### Finding mode and mean for each date ###
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
# set the correct datatypes
energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", ".", reading)))
