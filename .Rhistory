AIC(f1,f2,f3,f4,f5,fit_basic, f_startend, f_weekday,f_weekday_startend)
summary(f1)
summary(f1)
a <- summary(f1)
a$coefficients
a$call
a$call
summary(f1)$call
summary(f1)$call
summary(f2)$call
summary(f3)$call
summary(f4)$call
summary(f_startend)$call
summary(f_weekday)$call
summary(f_weekday_startend)$call
summary(f_basic)$call
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, dew_pt, pressure, start_or_end)
fit_scope <- lm(ncons~. ,D_scope)
f5 <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, dew_pt, pressure, weekend)
fit_scope <- lm(ncons~. ,D_scope)
f6 <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, dew_pt, pressure)
fit_scope <- lm(ncons~. ,D_scope)
f7 <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, dew_pt, pressure, start_or_end,weekend)
fit_scope <- lm(ncons~. ,D_scope)
f8 <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
# Trying without dew_pt. But the model is better with it
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, pressure, weekend)
fit_scope <- lm(ncons~. ,D_scope)
f9 <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
AIC(f5,f6,f7,f8,f9)
### RESULTS
# The one with both start or end + weekend is again the best
# with the one with only weekend coming in second
# the AIC
AIC(f1,f2,f3,f4,f5,f6,f7,f8,f9)
### RESULTS
# The one with both start or end + weekend is again the best
# with the one with only weekend coming in second
# the AIC
as.data.frame(AIC(f1,f2,f3,f4,f5,f6,f7,f8,f9))
### RESULTS
# The one with both start or end + weekend is again the best
# with the one with only weekend coming in second
# the AIC
arange(as.data.frame(AIC(f1,f2,f3,f4,f5,f6,f7,f8,f9)), AIC)
### RESULTS
# The one with both start or end + weekend is again the best
# with the one with only weekend coming in second
# the AIC
arrange(as.data.frame(AIC(f1,f2,f3,f4,f5,f6,f7,f8,f9)), AIC)
summary(f5)$call
summary(f6)$call
summary(f7)$call
summary(f8)$call
summary(f9)$call
#f4 < f2 < f8 < f6 < f9 < f1 < f5 < f3 < f7
# f5 - f9 are with second order interactions
# f1 - f4 are with third order interactions
as.data.frame(AIC(f1,f2,f3,f4,f5,f6,f7,f8,f9)
#f4 < f2 < f8 < f6 < f9 < f1 < f5 < f3 < f7
# f5 - f9 are with second order interactions
# f1 - f4 are with third order interactions
models <- as.data.frame(AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8,f9)
as.data.frame(AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8,f9)
models <- as.data.frame(AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8,f9)
models <- AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8,f9)
models
models %>%
as.data.frame() %>%
arrange(AIC)
models <- models %>%
as.data.frame() %>%
arrange(AIC)
models
models <- models %>%
as.data.frame()
models
models <- AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8,f9)
models <- models %>%
as.data.frame()
models
rep(8,2)
rep("",2)
rep(3,2)
rep(3,8)
c(rep(3,8), rep(2,4)
)
c(rep(3,8), rep(2,4))
models <- AIC(fit_basic, f_startend, f_weekday,f_weekday_startend,f1,f2,f3,f4,f5,f6,f7,f8)
models <- models %>%
as.data.frame()
models$max_order <- c(rep(3,8), rep(2,4))
models
c("Basic","start_end","weekend","weekend+start_end","start_end","weekend","basic","weekend+start_end","start_end","weekend","basic","weekend+start_end")
models$type <- c("Basic","start_end","weekend","weekend+start_end","start_end","weekend","basic","weekend+start_end","start_end","weekend","basic","weekend+start_end")
models
models <- arrange(models, AIC) %>%
select(AIC, type, max_order, df)
xtable(models)
#
lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D_scope)
#### Loading and mutating/formating the data ####
## Reading in the libraries
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
library(xtable)
library(lubridate)
## Reading in the data
D <- read.csv("merged_data.csv", header=TRUE)
## Setting the datatypes
# Setting the factors
D <- mutate(D, across(c(dir, cond, fog, rain, ID),factor))
# Setting the dates
D$date <- as.POSIXct(D$date, tz = "UTC")
## Mutating the data
# Adding temp difference column to the dataframe
D$tempdif <- 21 - D$temp
# Adding the weekends as a column
is_weekend <- function(date){
number_day_df <- wday(date, label=T)
number_day_char <- as.character(number_day_df)
return(number_day_char)
}
D <- mutate(D, weekday=is_weekend(date)) %>%
mutate(weekend = ifelse(weekday %in% c("lø","sø"),"weekend","workingday")) %>%
mutate(weekend = factor(weekend))
# getting start/end of month int (mutating the date variable)
D <- mutate(D, dag=str_split_fixed(date,"-",3)[ ,3])
D <- mutate(D, start_or_end = ifelse(as.integer(dag)<15, "START","END")) %>%
mutate(start_or_end = factor(start_or_end))
# find the normalised data
mean_each <- group_by(D, ID) %>%
summarise(mean_each = mean(consumption))
D_with_mean <- inner_join(mean_each, D, "ID")
D <- mutate(D_with_mean, ncons = consumption/mean_each)
## Removing non important columns
D <- select(D,!c("temp","mean_each","dag","weekday"))
#### Removing outliers ####
#
lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D_scope)
#
lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
# Setting the found model up
fit <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
update(fit, .~. - dew_pt:weekend -hum:weekend)
# Removing outliers
plot(fit)
# Setting the found model up
fit <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
# Removing outliers
par(mfrow=c(2,2))
plot(fit)
D <- filter(!row_number() %in% outliers)
D <- filter(D, !row_number() %in% outliers)
outliers <- c(9841, 1639)
D <- filter(D, !row_number() %in% outliers)
par(mfrow=c(2,2))
plot(fit)
par(mfrow=c(2,2))
plot(fit)
outliers <- c(9841, 1639)
D <- filter(D, !row_number() %in% outliers)
fit <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
par(mfrow=c(2,2))
plot(fit)
outliers <- c(9841, 1639,9478)
D <- filter(D, !row_number() %in% outliers)
fit <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
par(mfrow=c(2,2))
plot(fit)
outliers <- c(9841, 1639,9478,9477)
D <- filter(D, !row_number() %in% outliers)
fit <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
par(mfrow=c(2,2))
plot(fit)
# Fitting the model again after
D_scope <- select(D, ID, ncons, tempdif, wind_spd, hum, dew_pt, pressure, weekend)
fit_scope <- lm(ncons~. ,D_scope)
fit <- step(fit_scope, scope = ~.^2 , k=log(nrow(D_scope)), test = "F")
summary(fit)
fit_before <- lm(ncons ~ ID + tempdif + wind_spd + hum + dew_pt +
pressure + weekend + ID:tempdif + tempdif:weekend + wind_spd:hum +
tempdif:dew_pt + wind_spd:dew_pt + tempdif:hum + hum:dew_pt +
ID:weekend + dew_pt:weekend + hum:weekend + dew_pt:pressure,
data = D)
par(mfrow=c(2,2))
plot(fit_before)
AIC(fit, fit_before)
#### Can we remove nonsensical interactions ####
drop1(fit)
#### Can we remove nonsensical interactions ####
# Based on drop1
drop1(fit)
update(fit, .~. -wind_spd:weekend)
AIC(update(fit, .~. -wind_spd:weekend), fit)
anova(update(fit, .~. -wind_spd:weekend), fit)
#### Can we remove nonsensical interactions ####
# Based on drop1
drop1(fit)
Anova(fit)
#### Can we remove nonsensical interactions ####
# Based on drop1
drop1(fit)
Anova(fit)
#### Can we remove nonsensical interactions ####
# Based on drop1
drop1(fit)
#### Can we remove nonsensical interactions ####
# Based on drop1
drop1(fit, test ="F")
ggplot(D) +
geom_point(aes(x=date, y=ncons))
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, ncons)
D_plot
D_plot <- summarise(D_by_date, mncons = ncons)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons))
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = ncons)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons))
D_plot
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = ncons)
D_plot <- summarise(D_by_date, mncons = ncons)
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = mean(ncons))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons))
D_plot
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons)) +
geo_point(aes(x=date, y=tempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons)) +
geom_point(aes(x=date, y=tempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons)) +
geom_point(data = D, aes(x=date, y=tempdif))
cons_mean <- summarise(D, mean(ncons))
cons_mean <- summarise(D, mean(ncons))
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = mean(ncons)/cons_mean)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons)) +
geom_point(data = D, aes(x=date, y=tempdif))
D_plot
cons_mean <- summarise(D, mean(ncons))
cons_mean
as.double(cons_mean)
cons_mean <- summarise(D, mean(ncons)) %>% as.double()
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = mean(ncons)/cons_mean)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons)) +
geom_point(data = D, aes(x=date, y=tempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red") +
geom_point(data = D, aes(x=date, y=tempdif))
cons_mean <- summarise(D, mean(ncons)) %>% as.double()
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = mean(ncons)/cons_mean)
temp_mean <- summarise(D, mean(tempdif)) %>% as.double()
D2_plot <- mutate(D,mtempdif = tempdif/temp_mean)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red") +
geom_point(data = D, aes(x=date, y=mtempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red") +
geom_point(data = D2_plot, aes(x=date, y=mtempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", apha=0.5) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", alpha=0.5) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.5) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.5)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8)
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
labs(colour =c("a","b"))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sex_axis(~.,name?"hej"))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.,name?"hej"))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.,name="hej"))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_point(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
scale_y_continuous(sec_axis(~.))
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
labs = (x="2")
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
labs = (x="2")
ggplot(D_plot) +
geom_point(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.8) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.8) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.5) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.5) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.3) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.3) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), size=0.4) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif), col="blue",size=0.4) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="2")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif/normalisedConsumption (both divided by their mean")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif/normalisedConsumption")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif/ normalisedConsumption")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / normalisedConsumption")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / normalisedConsumption \nBoth normalised")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / normalisedConsumption \n (divided by their means)")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / normalised consumption \n (divided by their means)")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
title("tempdif and mean normalised consumption \n
both divided by their means \n
agains date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("tempdif and mean normalised consumption \n
both divided by their means \n
agains date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("tempdif and mean normalised consumption
both divided by their means
agains date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("tempdif and mean normalised consumption
both divided by their means
against date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("tempdif and mean normalised consumption
both divided by their means
against date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle(" tempdif and mean normalised consumption
both divided by their means
against date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle(" tempdif and mean normalised consumption
both divided by their means
against date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("Tempdif and mean normalised consumption
both divided by their means
against date")
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("Tempdif and mean normalised consumption
(both divided by their means)
against date")
# PLOT Tempdif and mean normalised consumption
# (both divided by their means)
# against date
cons_mean <- summarise(D, mean(ncons)) %>% as.double()
D_by_date <- group_by(D, date)
D_plot <- summarise(D_by_date, mncons = mean(ncons)/cons_mean)
temp_mean <- summarise(D, mean(tempdif)) %>% as.double()
D2_plot <- mutate(D, mtempdif = tempdif/temp_mean)
ggplot(D_plot) +
geom_line(aes(x=date, y=mncons), col="Red", size=0.4) +
geom_line(data = D2_plot, aes(x=date, y=mtempdif),size=0.4) +
labs(x="Date", y="tempdif / mean normalised consumption \n (divided by their means)") +
ggtitle("Tempdif and mean normalised consumption
(both divided by their means)
against date")
#### Loading and mutating/formating the data ####
## Reading in the libraries
rm(list=ls(D))
#### Loading and mutating/formating the data ####
## Reading in the libraries
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
library(xtable)
library(lubridate)
## Reading in the data
D <- read.csv("merged_data.csv", header=TRUE)
#### Loading and mutating/formating the data ####
## Reading in the libraries
rm(list=ls(D))
