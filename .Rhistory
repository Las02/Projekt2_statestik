}
all_factors <- mutate(all_factors, factor = put_in_date )
}
all_factors <- mutate(all_factors, factor = as.data.frame(put_in_date) )
for (i in 1:length(all_factors)){
factor = all_factors[i]
all_dates <- levels(clima$date)
put_in_date <- c()
for (i in 1:length(all_dates)){
factor_for_date <- filter(clima, date == all_dates[i]) %>%
select(factor)
max <- rownames(as.data.frame(which.max(table(factor_for_date))))
put_in_date <- c(put_in_date,max)
}
all_factors <- mutate(all_factors, factor = as.data.frame(put_in_date) )
}
print(put_in_date)
clima_by_date
=======
str(clima)
View(clima)
clima$dir[clima$dir == ""]
clima$dir[clima$dir == "East"]
clima$dir[clima$dir == ""] <- "Na"
clima$dir[clima$dir == ""] <- "Nad"
clima$dir[clima$dir == ""] <- "NaN"
clima$dir[clima$dir == "East"]
clima$dir[clima$dir == "East"] <- Hej
clima$dir[clima$dir == ""] <- Hej
clima$dir[clima$dir == ""] <- "hejsa"
str(clima)
str(clima$dir)
clima$dir[clima$dir == "East"]
clima$dir[clima$dir == "ENE"]
clima$dir[clima$dir == "NA"]
clima$dir[clima$dir == "NA"] <- "NaN"
clima["dir"][clima["dir"] == "NA"] <- NaN
stri(clima)
str(clima)
View(clima)
getmode <- function(n) {groupv <- group(v) group[]}
groupv[which.max(tabulate(match(v,groupv)))]}
getmode <- function(v) {
groupv <- group(v)
groupv[which.max(tabulate(match(v,groupv)))]
}
mode(clima$dir)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all coloumns without data (only NA columns)
clima <- select(WG,!c("wind_gust","wind_chill","heat_index","precip","precip_rate","precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
#formatting data
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
dir  = factor(dir),
cond = factor(cond),
fog  = factor(fog),
rain = factor(rain),
snow = factor(snow),
date = factor(date),
time = factor(time)
)
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
mode(clima$dir)
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all coloumns without data (only NA columns)
clima <- select(WG,!c("wind_gust","wind_chill","heat_index","precip","precip_rate","precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
#formatting data
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
dir  = factor(dir),
cond = factor(cond),
fog  = factor(fog),
rain = factor(rain),
snow = factor(snow),
date = factor(date),
time = factor(time)
)
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
mode(clima$dir)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all coloumns without data (only NA columns)
clima <- select(WG,!c("wind_gust","wind_chill","heat_index","precip","precip_rate","precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
#formatting data
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
dir  = factor(dir),
cond = factor(cond),
fog  = factor(fog),
rain = factor(rain),
snow = factor(snow),
date = factor(date),
time = factor(time)
)
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
mode(clima$dir)
mode(clima_by_date$dir)
mode(clima_by_date)
str(clima)
getmode <- function(v) {
groupv <- group(v)
groupv[which.max(tabulate(match(v,groupv)))]
}
getmode(clima_by_date)
getmode(clima_by_date$dir)
getmode(clima_by_date,dir)
clima
clima_by_date
clima_by_date <- group_by(clima, date)
getmode <- function(v) {
groupv <- unique(v)
tab <- tabulate(match(v,groupv))
groupv[tab == max(tab)]
}
getmode(clima$dir)
getmode(clima_by_date$dir)
summarise(clima_by_date,
getmode(dir, na.rm=T)
)
getmode(clima_by_date$dir)
summarise(clima_by_date,
getmode(dir, na.rm=T))
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
load("./WUndergroundHourly.RData")
# Remove all coloumns without data (only NA columns)
clima <- select(WG,!c("wind_gust","wind_chill","heat_index","precip","precip_rate","precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
#formatting data
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
dir  = factor(dir),
cond = factor(cond),
fog  = factor(fog),
rain = factor(rain),
snow = factor(snow),
date = factor(date),
time = factor(time)
)
# Summarize continouse data
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
# Summarize factorial data
getmode <- function(v) {
groupv <- unique(v)
tab <- tabulate(match(v,groupv))
groupv[tab == max(tab)]
}
summarise(clima_by_date,
getmode(dir, na.rm=T))
getmode(clima_by_date$dir)
getmode(clima_by_date$cond)
getmode(clima_by_date$dir)
# Summarize factorial data
getmode <- function(v) {
groupv <- unique(v)
tab <- tabulate(match(v,groupv))
groupv[tab == max(tab)]
}
getmode(clima_by_date$dir)
files <- dir('C:\Users\marie\OneDrive - Danmarks Tekniske Universitet\Dokumenter\GitHub\Projekt2_statestik\meterdata\meterdata',pattern="*.txt",full.names=TRUE)
files <- dir('C:/Users/marie/OneDrive - Danmarks Tekniske Universitet/Dokumenter/GitHub/Projekt2_statestik/meterdata/meterdata',pattern="*.txt",full.names=TRUE)
files
# extracting files in folder
files_data <- files[grep("meterdata",files)]
head(files_data)
# combining all text files
for (i in 1:length(files_data)){if(i==1){
assign(pasta0("data"),read.table(files[i],header=False,sep=";"))
}
if(!i==1){
assign(paste0("Test",i), read.table(files[i],header = FALSE, sep = ";"))
Data <- rbind(data,get(paste0("Test",i)))
rm(list = ls(pattern = "Test"))
}
}
# list all files
files <- dir('C:/Users/marie/OneDrive - Danmarks Tekniske Universitet/Dokumenter/GitHub/Projekt2_statestik/meterdata/meterdata',pattern="*.txt",full.names=TRUE)
files
# extracting files in folder
files_data <- files[grep("meterdata",files)]
head(files_data)
# Picking the correct datatype for the columns
clima <- mutate(clima,
dir  = factor(dir),
cond = factor(cond),
fog  = factor(fog),
rain = factor(rain),
snow = factor(snow),
date = factor(date),
time = factor(time)
)
# Summarize continouse data
clima_by_date <- group_by(clima, date)
summarise(clima_by_date,
mean(temp, na.rm = T),
mean(dew_pt, na.rm = T),
mean(hum, na.rm = T),
mean(wind_spd, na.rm = T),
mean(vis, na.rm = T),
mean(pressure, na.rm = T))
# extracting files in folder
files_data <- files[grep("meterdata",files)]
txt_files_df <- lapply(files,function(x {read.table(file=x,header=T,sep=",")})
txt_files_df <- lapply(files,function(x) {read.table(file=x,header=T,sep=",")})
txt_files_df <- lapply(txt_files_ls, function(x) {read.table(file = x, header = T, sep =";")})
txt_files_df <- lapply(files,function(x) {read.table(file=x,header=T,sep=";")})
# Combining them
combined_files <- do.call("rbind",lapply(txt_files_df,as.data.frame))
# Combining them
combined_files <- do.call("rbind",lapply(txt_files_df,as.data.frame))
txt_files_df
# Combining them
combined_files <- do.call("rbind",lapply(txt_files_df,as.data.frame))
# Combining them
combined_files <- do.call("rbind",lapply(txt_files_df, as.data.frame))
txt_files_df
txt_files_df
txt_files_df <- lapply(files,function(x) {read.table(file=x,header=T,sep=";")})
txt_files_df
View(txt_files_df)
# Combining them
combined_files <- do.call("rbind",lapply(txt_files_df, as.data.frame))
# all files in data frames
txt_files_df <- lapply(files,function(x) {read.table(file=x,header=T,sep=";")})
txt_files_df
>>>>>>> Stashed changes
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
### WUnderground data
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
### WUnderground data
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
# Finding mean and mode for each day
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
clima_mean_mode
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
# set the correct datatypes
energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", "", reading)))
engery
energy
energy
View(energy)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
### WUnderground data
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
# Finding mean and mode for each day
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
clima_mean_mode
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
energy
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
# set the correct datatypes
energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", "", reading)))
energy
View(energy)
#### Introduction ####
rm(list=ls())
library(tidyverse)
library(ggplot2)
library(car)
library(stringr)
### WUnderground data
load("./WUndergroundHourly.RData")
# Remove all columns without data (only NA columns)
clima <- select(WG,!c("wind_gust"  , "wind_chill",
"heat_index" , "precip",
"precip_rate", "precip_total"))
# Remove columns with fixed values
clima <- select(clima, !c("hail","thunder","tornado"))
# making seperate column for date and time
clima[c('date','time')] <- str_split_fixed(clima$date,' ',2)
# Picking the correct datatype for the columns
clima <- mutate(clima,
across(c(dir, cond, fog, rain, snow, date, time),factor)
)
# Finding mean and mode for each day
clima_by_date <- group_by(clima, date)
# Define function to calculate mode
mode <- function(factors){
max <- factors %>%
table() %>%
which.max() %>%
as.data.frame() %>%
rownames() %>%
factor()
# If it does not have a value set it to None for clarity
if (max == ""){
return(factor("None"))}
else {
return(max)
}
}
# Assign the mode and mean using aggregate functions
clima_mean_mode <- clima_by_date %>%
summarise(
across(c(dir, cond, fog, rain, snow),mode),
across(c(temp, dew_pt, hum, wind_spd, vis, pressure), ~mean(.,na.rm=T))
)
clima_mean_mode
### Read in the energy performance of the building
# Find all the files in ./data
data_files <- dir("./data", full.names=T)
# Read them into a single dataframe
# \x00 is set to be ignored  since it for some reason is at the end of each file
energy <- NULL
for (i in seq_along(data_files)){
data <- read.table(data_files[i], sep=";", skipNul=TRUE) %>%
select(V1, V2, V4)
energy <- bind_rows(energy, data)
}
# Renaming the dataframe
energy <- energy %>%
rename(id=V1, time=V2, reading=V4)
energy
## Exclude meters with less than 121 records
# find the records with 121 records
id_to_keep <- group_by(energy, id) %>%
summarise(n=n()) %>%
filter(n==121)
# only keep these
energy <- filter(energy, id %in% id_to_keep$id)
energy
# set the correct datatypes
energy <- mutate(energy, time = factor(time), reading = as.numeric(gsub(",", ".", reading)))
energy
View(data)
View(clima)
